{"version":3,"sources":["src/index.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AAEA;;;;AAKA,IAAM,QAAQ,GAAG;AACf,EAAA,eAAe,EAAE;AADF,CAAjB;AAIA;;;;;;AAMA;;;;;;;AAMA,SAAS,cAAT,CAAwB,MAAxB,EAAgC;AAC9B,SAAO,UAAC,QAAD,EAAc;AAAA,4BACM,QADN,CACX,OADW;AAAA,QACX,OADW,kCACD,EADC;AAAA,QAIC,YAJD,GAOf,OAPe,CAIjB,gBAJiB;AAAA,QAKC,YALD,GAOf,OAPe,CAKjB,gBALiB;AAAA,QAMC,YAND,GAOf,OAPe,CAMjB,gBANiB;;AASnB,QAAI,YAAY,IAAI,YAApB,EAAkC;AAChC,MAAA,YAAY,CAAC,OAAb,CAAqB,MAAM,CAAC,eAA5B,EAA6C,YAAY,IAAI,YAA7D;AACD;;AAED,QAAI,YAAJ,EAAkB;AAChB,MAAA,YAAY,CAAC,UAAb,CAAwB,MAAM,CAAC,eAA/B;AACD;;AAED,WAAO,QAAP;AACD,GAlBD;AAmBD;AAED;;;;;;;AAKe,SAAS,qBAAT,GAA6C;AAAA,MAAd,OAAc,uEAAJ,EAAI;;AAC1D,MAAM,MAAM,qBACP,QADO;AAEV,IAAA,OAAO,EAAP;AAFU,IAAZ;;AAKA,SAAO,IAAI,sBAAJ,CAAe,UAAC,SAAD,EAAY,OAAZ,EAAwB;AAC5C,IAAA,SAAS,CAAC,UAAV,CAAqB;AAAA,8BAAG,OAAH;AAAA,UAAG,OAAH,6BAAa,EAAb;AAAA,aAAuB;AAC1C,QAAA,OAAO,oBACF,OADE;AAEL,UAAA,aAAa,EAAE,YAAY,CAAC,OAAb,CAAqB,MAAM,CAAC,eAA5B,KAAgD;AAF1D;AADmC,OAAvB;AAAA,KAArB;AAOA,WAAO,OAAO,CAAC,SAAD,CAAP,CAAmB,GAAnB,CAAuB,cAAc,CAAC,MAAD,CAArC,CAAP;AACD,GATM,CAAP;AAUD;AAED;;;;;;;;;SAOsB,c;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B,YAAA,aAA9B,2DAA8C,EAA9C;AAAkD,YAAA,OAAlD;;AACL;AAEM,YAAA,MAHD,qBAIA,QAJA;AAKH,cAAA,OAAO,EAAP;AALG;;AAQL,gBAAI,OAAO,aAAP,KAAyB,UAA7B,EAAyC;AACvC,cAAA,aAAa,GAAG,aAAa,EAA7B;AACD;;AAVI,kBAYD,OAAO,aAAa,CAAC,IAArB,KAA8B,UAZ7B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAamB,aAbnB;;AAAA;AAaH,YAAA,aAbG;;AAAA;AAAA,+DAiBA,aAjBA;AAkBH,cAAA,aAAa,EAAE,YAAY,CAAC,OAAb,CAAqB,MAAM,CAAC,eAA5B,KAAgD;AAlB5D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"index.js","sourcesContent":["import { ApolloLink } from 'apollo-link';\n\n/**\n * @typedef {Object} Options apollo options options\n * @property {string} localStorageKey Key in the local storage to store jwt to\n */\n\nconst defaults = {\n  localStorageKey: '5cnasGf8fvJFB8WW2Uxrayc5',\n};\n\n/**\n * @typedef {Function} GraphQlLinkMiddleware handles graphql http response\n * @property {Object} GraphQlResponse in the local storage to store jwt to\n * @property {Object} GraphQlResponse.headers Server response headers\n */\n\n/**\n * @function handleResponse\n * @private\n * @param  {Options} values Config values\n * @return {GraphQlLinkMiddleware} Function that handles the response\n */\nfunction handleResponse(values) {\n  return (response) => {\n    const { headers = {} } = response;\n\n    const {\n      'X-Token-Create': xTokenCreate,\n      'X-Token-Update': xTokenUpdate,\n      'X-Token-Remove': xTokenRemove,\n    } = headers;\n\n    if (xTokenCreate || xTokenUpdate) {\n      localStorage.setItem(values.localStorageKey, xTokenCreate || xTokenUpdate);\n    }\n\n    if (xTokenRemove) {\n      localStorage.removeItem(values.localStorageKey);\n    }\n\n    return response;\n  };\n}\n\n/**\n * @function createAuthManagerLink\n * @param  {type} options {description}\n * @return {GraphLink} Returns a manager link\n */\nexport default function createAuthManagerLink(options = {}) {\n  const values = {\n    ...defaults,\n    options,\n  };\n\n  return new ApolloLink((operation, forward) => {\n    operation.setContext(({ headers = {} }) => ({\n      headers: {\n        ...headers,\n        authorization: localStorage.getItem(values.localStorageKey) || null,\n      },\n    }));\n\n    return forward(operation).map(handleResponse(values));\n  });\n}\n\n/**\n * @function createWsParams\n * @param  {Object|Function<Object|Promise<Object>>} partialParams WS params\n * @param  {Options} options User options\n * @return {Object} Ws Connection Params\n * @description Make `lazy: true` in WsLink options\n */\nexport async function createWsParams(partialParams = {}, options) {\n  /* eslint-disable no-param-reassign */\n\n  const values = {\n    ...defaults,\n    options,\n  };\n\n  if (typeof partialParams === 'function') {\n    partialParams = partialParams();\n  }\n\n  if (typeof partialParams.then === 'function') {\n    partialParams = await partialParams;\n  }\n\n  return {\n    ...partialParams,\n    authorization: localStorage.getItem(values.localStorageKey) || null,\n  };\n}\n"]}